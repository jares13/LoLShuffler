// <auto-generated />
using System.Collections.Generic;
using LoLShuffler.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LoLShuffler.DAL.Migrations
{
    [DbContext(typeof(ShufflerDbContext))]
    [Migration("20230507174406_add-rang")]
    partial class addrang
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LoLShuffler.DAL.Models.Filter", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<List<int>>("ChampionClasses")
                        .HasColumnType("integer[]");

                    b.Property<int>("ChampionsCount")
                        .HasColumnType("integer");

                    b.Property<int>("MaxRang")
                        .HasColumnType("integer");

                    b.Property<int>("MinRang")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Filters");
                });

            modelBuilder.Entity("LoLShuffler.DAL.Models.Summoner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<string>>("ChampionsNames")
                        .HasColumnType("text[]");

                    b.Property<bool>("IsActiv")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Rang")
                        .HasColumnType("integer");

                    b.Property<string>("RiotId")
                        .HasColumnType("text");

                    b.Property<int>("TeamColor")
                        .HasColumnType("integer");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Summoners");
                });

            modelBuilder.Entity("LoLShuffler.DAL.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PrivateKey")
                        .HasColumnType("text");

                    b.Property<string>("PublicKey")
                        .HasColumnType("text");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("LoLShuffler.DAL.Models.Filter", b =>
                {
                    b.HasOne("LoLShuffler.DAL.Models.Team", "Team")
                        .WithOne("Filter")
                        .HasForeignKey("LoLShuffler.DAL.Models.Filter", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("LoLShuffler.DAL.Models.Summoner", b =>
                {
                    b.HasOne("LoLShuffler.DAL.Models.Team", "Team")
                        .WithMany("Summoners")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("LoLShuffler.DAL.Models.Team", b =>
                {
                    b.Navigation("Filter");

                    b.Navigation("Summoners");
                });
#pragma warning restore 612, 618
        }
    }
}
